// Если BASE_H еще не определен, компилятор обработает код до #endif
#ifndef BASE_H
#define BASE_H

// Подключаем библиотеку для работы с файловыми потоками, которая нужна для использования std::ofstream и std::ifstream в методах класса
#include <fstream>

// Подключаем библиотеку для работы со строками std::string, которая необходима, так как методы используют std::string в параметрах и возвращаемых значениях
#include <string>

// Объявление абстрактного базового класса Base, служит интерфейсом для всех классов-наследников (Hero, Villain, Monster)
class Base {
// public - интерфейс доступный для внешнего использования
public:
    // Виртуальный деструктор с использованием = default
    virtual ~Base() = default;

    // Чисто виртуальный метод для вывода информации об объекте в консоль
    // const означает, что метод не изменяет состояние объекта, const = 0 делает метод абстрактным - класс становится абстрактным
    virtual void print() const = 0;

    // Чисто виртуальный метод для сохранения объекта в файл
    // Принимает ссылку на выходной файловый поток (не копирует поток), const гарантирует, что метод не изменит объект при сохранении
    virtual void saveToFile(std::ofstream& out) const = 0;

    // Чисто виртуальный метод для загрузки объекта из файла
    // Принимает ссылку на входной файловый поток, не const, так метод изменяет состояние объекта (заполняет его данными из файла)
    virtual void loadFromFile(std::ifstream& in) = 0;

    // Чисто виртуальный метод установки имени объекта
    // Принимает константную ссылку на строку (эффективно по памяти), const предотвращает ненужное копирование строки
    virtual void setName(const std::string& name) = 0;

    // Чисто виртуальный метод получения имени объекта
    // Возвращает копию строки с именем, const гарантирует, что метод не изменит объект
    virtual std::string getName() const = 0;
    
    // Чисто виртуальный метод для создания копии объекта
    // Возвращает указатель на новый объект-копию, const гарантирует, что оригинальный объект не будет изменен при клонировании
    virtual Base* clone() const = 0;
};

#endif 
