// Сторожевые макросы (include guards)
// Предотвращают множественное включение этого заголовочного файла в проект
#ifndef BASE_H  // Если макрос BASE_H еще не определен...
#define BASE_H  // ...тогда определяем его, и это означает, что файл будет обработан

// Подключаем библиотеку для работы с файловым вводом-выводом
// Нужен для использования std::ofstream и std::ifstream в методах класса
#include <fstream>

// Объявление абстрактного базового класса Base
class Base {
// Публичная секция - интерфейс, доступный для внешнего использования
public:
    // Виртуальный деструктор
    // Гарантирует правильное удаление объектов производных классов
    // при работе через указатель на базовый класс
    virtual ~Base() {}

    // Чисто виртуальная функция вывода информации на экран
    // = 0 делает функцию абстрактной - класс становится абстрактным
    // const означает, что метод не изменяет состояние объекта
    virtual void print() const = 0;

    // Чисто виртуальная функция сохранения объекта в файл
    // Принимает ссылку на выходной файловый поток
    // const означает, что метод не изменяет состояние объекта
    virtual void saveToFile(std::ofstream& out) const = 0;

    // Чисто виртуальная функция загрузки объекта из файла
    // Принимает ссылку на входной файловый поток
    virtual void loadFromFile(std::ifstream& in) = 0;

    // Чисто виртуальный метод установки имени
    // Принимает константную ссылку на строку с именем
    virtual void setName(const std::string& name) = 0;

    // Чисто виртуальный метод получения имени
    // Возвращает строку с именем объекта
    // const означает, что метод не изменяет состояние объекта
    virtual std::string getName() const = 0;
};

// Завершение сторожевого макроса
#endif // BASE_H
